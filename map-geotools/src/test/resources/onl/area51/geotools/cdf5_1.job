// Tests the netcdf module
//
// Test getting a specific grid from a grib file
//

mapBounds = createReferencedEnvelope( -180,-90, 180,90);
log mapBounds;

//setMapBounds( map, -32, 33, 70, 82 );
//setMapBounds( map, -180, -90, 180, 90 );
//setMapBounds( map, 180, -90, 360+180, 90 );

map = new mapContent();
setMapProjection(map,"winkelTripel");

// Green land
stroke = createStroke( "black", 1);
landFill = createFill( "green", 0.5 );

landStyle = createPolygonStyle( stroke, landFill );

gridStyle = createLineStyle( stroke );

log "Adding oceans";
oceanSource = getFeatureSource( "/usr/local/shape/world_oceans/World_Seas.shp" );
oceanFill = createFill( "cyan", 0.2 );
oceanStyle = createPolygonStyle( oceanStroke, oceanFill );
layer = new featureLayer( oceanSource, oceanStyle );
map.addLayer( layer );

log "Adding land mass";
worldSource = getFeatureSource( "/usr/local/shape/50m_cultural/ne_50m_admin_0_countries.shp" );
layer = new featureLayer( worldSource, landStyle );
map.addLayer( layer );

log "add grid";
grid = new featureLayer( createLineGrid( mapBounds,
    new orthoLineDef( "VERTICAL", 2, 10 ),
    //new orthoLineDef( "VERTICAL", 2, 2 ),
    new orthoLineDef( "HORIZONTAL", 2, 10 )//,
    //new orthoLineDef( "HORIZONTAL", 2, 2 )
    ),
    gridStyle );
map.addLayer( grid );

/*
log "Opening gfs";

try( r = new cdfReader( "/home/peter/gfs.grib" ) ) {
    temp = cdfGetGrid( r, "Temperature_surface" );
    tempStyle = createGreyscaleStyle(  );
    tempLayer = new gridCoverageLayer( map, temp, tempStyle );
    //tempLayer = new gridCoverageLayer( temp, tempStyle );
    map.addLayer( tempLayer );
}

// Add world layer over the grib data, but as a grid
layer = new featureLayer( worldSource, gridStyle );
map.addLayer( layer );
*/

log "set bounds";
setMapBounds( map, mapBounds );

log "get size";
size = getMapBounds(map,700);
//size = getMapBounds(map,1280);

log size;

log "render";
renderMapContent( "cdf5_1.png", map, "white", "black", size);

log "Finished";
